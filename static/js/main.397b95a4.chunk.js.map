{"version":3,"sources":["BooksAPI.js","components/BookCover.js","components/BookShelfChanger.js","components/Book.js","components/SearchPage.js","components/BookShelf.js","components/HomePage.js","components/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookCover","props","react_default","a","createElement","className","style","width","height","backgroundImage","bookImage","BookShelfChanger","shelfId","Currently Reading","Want to Read","Read","None","onChange","event","onChangeShelf","target","value","selectedShelf","disabled","name","map","idx","key","Book","_this$props","this","bookShelf","bookTitle","bookAuthors","onUpdate","components_BookCover","components_BookShelfChanger","author","Component","SearchPage","state","searchList","handleChange","BooksAPI","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","filter","imageLinks","existingBook","_this","getExistingBook","bookId","url","thumbnail","title","authors","setState","t0","console","log","abrupt","stop","_x","apply","arguments","catch","e","handleUpdate","changedBook","newShelf","_changedBook","find","_this2","react_router_dom","to","type","placeholder","components_Book","BookShelf","bookList","bookShelfId","bookShelfTitle","HomePage","bookShelves","components_BookShelf","BooksApp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","putOnShelf","shelvesTemplate","handleChangeShelf","toConsumableArray","push","_this3","react_router","exact","path","render","components_HomePage","components_SearchPage","React","ReactDOM","components_App","document","getElementById"],"mappings":"4RACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,kCC5BRC,EAbG,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,aACVC,MAAO,CACHC,MAAO,IACPC,OAAQ,IACRC,gBAAiBR,EAAMS,cCqCxBC,EA5CU,SAACV,GACtB,IAcMW,EAAU,CACZC,oBAAqB,mBACrBC,eAAgB,aAChBC,KAAM,OACNC,KAAM,QAEV,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UACIa,SAAU,SAACC,GAAD,OACNjB,EAAMkB,cAAcD,EAAME,OAAOC,QAErCA,MAAOpB,EAAMqB,eAEbpB,EAAAC,EAAAC,cAAA,UAAQiB,MAAM,OAAOE,UAAQ,GAA7B,cA5BI,CACZ,CACIC,KAAM,qBAEV,CACIA,KAAM,gBAEV,CACIA,KAAM,QAEV,CACIA,KAAM,SAoBOC,IAAI,SAAC3C,EAAO4C,GAAR,OACTxB,EAAAC,EAAAC,cAAA,UAAQuB,IAAKD,EAAKL,MAAOT,EAAQ9B,EAAM0C,OAClCvB,EAAMqB,gBAAkBV,EAAQ9B,EAAM0C,MAAtC,UAAAxC,OACUF,EAAM0C,MACX1C,EAAM0C,WCLrBI,mLA5BF,IAAAC,EAODC,KAAK7B,MALLS,EAFCmB,EAEDnB,UACAqB,EAHCF,EAGDE,UACAC,EAJCH,EAIDG,UACAC,EALCJ,EAKDI,YACAC,EANCL,EAMDK,SAEJ,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC+B,EAAD,CAAWzB,UAAWA,IACtBR,EAAAC,EAAAC,cAACgC,EAAD,CACId,cAAeS,EACfZ,cAAe,SAACrC,GAAD,OAAWoD,EAASpD,OAG3CoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc2B,GAC5BC,EAAYR,IAAI,SAACY,EAAQX,GAAT,OACbxB,EAAAC,EAAAC,cAAA,OAAKuB,IAAKD,EAAKrB,UAAU,gBACpBgC,aArBNC,aCqFJC,6MAnFXC,MAAQ,CACJC,WAAY,MAEhBC,aAAe,SAACxB,GACZyB,EAAgBzB,EAAME,OAAOC,OACxB5B,KADL,eAAAmD,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAA2D,EAAA3C,EAAA4C,KACU,SAAAC,EAAOtD,GAAP,IAAA+C,EAAA,OAAAK,EAAA3C,EAAA8C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAC,KAAA,EAEQV,EAAa/C,EACd2D,OAAO,SAACxE,GAAD,OAAUA,EAAKyE,aACtB7B,IAAI,SAAC5C,GACF,IAAM0E,EAAeC,EAAKvD,MAAMwD,gBAC5B5E,EAAKI,IAET,MAAO,CACHyE,OAAQ7E,EAAKI,GACb0E,IAAK9E,EAAKyE,WAAWM,UACrB7B,UAAWwB,EACLA,EAAaxB,UACb,OACNC,UAAWnD,EAAKgF,MAChB5B,YAAapD,EAAKiF,SAAW,MAGzCN,EAAKO,SAAS,CAAEtB,eAlBlBS,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAoBEe,QAAQC,IAARhB,EAAAc,IACAR,EAAKO,SAAS,CAAEtB,WAAY,KArB9BS,EAAAiB,OAAA,SAAAjB,EAAAc,IAAA,yBAAAd,EAAAkB,SAAApB,EAAA,iBADV,gBAAAqB,GAAA,OAAAzB,EAAA0B,MAAAxC,KAAAyC,YAAA,IA0BKC,MAAM,SAACC,GACJR,QAAQC,IAAIO,QAGxBC,aAAe,SAACC,EAAaC,GACzBpB,EAAKvD,MAAMkB,cAAcwD,EAAaC,GACtC,IAAMC,EAAerB,EAAKhB,MAAMC,WAAWqC,KACvC,SAACjG,GAAD,OAAUA,EAAK6E,SAAWiB,EAAYjB,SAE1CmB,EAAa9C,UAAY6C,EACzB,IAAMnC,EAAae,EAAKhB,MAAMC,WAAWhB,IAAI,SAAC5C,GAAD,OACzCA,EAAKmD,YAAc2C,EAAYd,MAAQgB,EAAehG,IAE1D2E,EAAKO,SAAS,CAAEtB,wFAEX,IAAAsC,EAAAjD,KACL,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,GAAG,IAAI5E,UAAU,gBAAvB,SAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIa,SAAUa,KAAKY,aACfwC,KAAK,OACLC,YAAY,gCAIxBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTyB,KAAKU,MAAMC,YACRX,KAAKU,MAAMC,WAAWhB,IAAI,SAAC5C,EAAM6C,GAAP,OACtBxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,GACLxB,EAAAC,EAAAC,cAACgF,EAAD,CACI1E,UAAS,OAAA1B,OAASH,EAAK8E,IAAd,KACT3B,UAAWnD,EAAKmD,UAChBC,YAAapD,EAAKoD,YAClBF,UAAWlD,EAAKkD,UAChBG,SAAU,SAAC0C,GAAD,OACNG,EAAKL,aAAa7F,EAAM+F,mBAxE3CtC,aCwBV+C,EA1BG,SAACpF,GAAU,IACjBqF,EAAwDrF,EAAxDqF,SAAUC,EAA8CtF,EAA9CsF,YAAYC,EAAkCvF,EAAlCuF,eAAgBrE,EAAkBlB,EAAlBkB,cAC9C,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBmF,GACjCtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTiF,EAAS7D,IAAI,SAAC5C,EAAM6C,GAAP,OACVxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,GACLxB,EAAAC,EAAAC,cAACgF,EAAD,CACI1E,UAAS,OAAA1B,OAASH,EAAK8E,IAAd,KACT5B,UAAWwD,EACXvD,UAAWnD,EAAKmD,UAChBC,YAAapD,EAAKoD,YAClBC,SAAU,SAAC0C,GAAD,OACNzD,EAActC,EAAM+F,aCezCa,mLA5BF,IAAA5D,EACkCC,KAAK7B,MAApCyF,EADH7D,EACG6D,YAAavE,EADhBU,EACgBV,cACrB,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,WACKsF,EAAYjE,IAAI,SAAC3C,EAAO4C,GAAR,OACbxB,EAAAC,EAAAC,cAACuF,EAAD,CACIhE,IAAKD,EACL6D,YAAazG,EAAMG,GACnBuG,eAAgB1G,EAAM0G,eACtBF,SAAUxG,EAAMwG,SAChBnE,cAAeA,QAK/BjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,GAAG,WAAT,uBAtBG3C,aCyGRsD,cArGX,SAAAA,EAAY3F,GAAO,IAAAuD,EAAA,OAAArE,OAAA0G,EAAA,EAAA1G,CAAA2C,KAAA8D,IACfpC,EAAArE,OAAA2G,EAAA,EAAA3G,CAAA2C,KAAA3C,OAAA4G,EAAA,EAAA5G,CAAAyG,GAAAI,KAAAlE,KAAM7B,KAyCVgG,WAAa,SAAClG,GACV,OAAOyD,EAAK0C,gBAAgBzE,IAAI,SAAC3C,GAAD,MAAY,CACxCG,GAAIH,EAAMG,GACVuG,eAAgB1G,EAAM0G,eACtBF,SAAUvF,EAAMsD,OAAO,SAACxE,GAAD,OAAUA,EAAKkD,YAAcjD,EAAMG,SA9C/CuE,EAiDnB2C,kBAAoB,SAACxB,EAAaC,GAC9BD,EAAY5C,UAAY6C,EACxBjC,EAAgB,CAAE1D,GAAI0F,EAAYjB,QAAUkB,GACvCnF,KAAK,WACF,IAAIM,EAAKZ,OAAAiH,EAAA,EAAAjH,CAAOqE,EAAKhB,MAAMzC,OACNA,EAAM+E,KACvB,SAACjG,GAAD,OAAUA,EAAK6E,SAAWiB,EAAYjB,SAGnC3D,EAAQA,EAAM0B,IAAI,SAAC5C,GAAD,OACfA,EAAK6E,SAAWiB,EAAYjB,OACtBiB,EACA9F,IAEVkB,EAAMsG,KAAK1B,GAEjB,IAAMe,EAAclC,EAAKyC,WAAWlG,GACpCyD,EAAKO,SAAS,CAAEhE,QAAO2F,kBAE1BlB,MAAM,SAACC,GACJR,QAAQC,IAAIO,MArELjB,EAwEnBC,gBAAkB,SAACxE,GAAD,OACduE,EAAKhB,MAAMzC,MAAM+E,KAAK,SAACjG,GAAD,OAAUA,EAAK6E,SAAWzE,KAvEhDuE,EAAK0C,gBAAkB,CACnB,CACIjH,GAAI,mBACJuG,eAAgB,oBAChBF,SAAU,IAEd,CACIrG,GAAI,aACJuG,eAAgB,eAChBF,SAAU,IAEd,CACIrG,GAAI,OACJuG,eAAgB,OAChBF,SAAU,KAGlB9B,EAAKhB,MAAQ,CACTzC,MAAO,GACP2F,YAAa,IArBFlC,mFAwBC,IAAAuB,EAAAjD,KPZtB/C,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QOYVN,KAAK,SAACM,GACHkE,QAAQC,IAAInE,GACZA,EAAQA,EAAM0B,IAAI,SAAC5C,GAAD,MAAW,CACzB6E,OAAQ7E,EAAKI,GACb0E,IAAK9E,EAAKyE,WAAWM,UACrB7B,UAAWlD,EAAKC,MAChBkD,UAAWnD,EAAKgF,MAChB5B,YAAapD,EAAKiF,WAEtB,IAAM4B,EAAcX,EAAKkB,WAAWlG,GACpCgF,EAAKhB,SAAS,CAAEhE,QAAO2F,kBAE1BlB,MAAM,SAACC,GACJR,QAAQC,IAAIO,sCAmCf,IAAA6B,EAAAxE,KACL,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACJxG,EAAAC,EAAAC,cAACuG,EAAD,CACIjB,YAAaY,EAAK9D,MAAMkD,YACxBvE,cAAemF,EAAKH,uBAIhCjG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACIE,KAAK,UACLC,OAAQ,kBACJxG,EAAAC,EAAAC,cAACwG,EAAD,CACIzF,cAAemF,EAAKH,kBACpB1C,gBAAiB6C,EAAK7C,6BA7F3BoD,IAAMvE,iBCD7BwE,IAASJ,OACLxG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACI9E,EAAAC,EAAAC,cAAC2G,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.397b95a4.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\n\r\nconst BookCover = (props) => {\r\n    return (\r\n        <div\r\n            className=\"book-cover\"\r\n            style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: props.bookImage,\r\n            }}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default BookCover;\r\n","import React from \"react\";\r\n\r\nconst BookShelfChanger = (props) => {\r\n    const shelves = [\r\n        {\r\n            name: \"Currently Reading\",\r\n        },\r\n        {\r\n            name: \"Want to Read\",\r\n        },\r\n        {\r\n            name: \"Read\",\r\n        },\r\n        {\r\n            name: \"None\",\r\n        },\r\n    ];\r\n    const shelfId = {\r\n        \"Currently Reading\": \"currentlyReading\",\r\n        \"Want to Read\": \"wantToRead\",\r\n        Read: \"read\",\r\n        None: \"none\",\r\n    };\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select\r\n                onChange={(event) =>\r\n                    props.onChangeShelf(event.target.value)\r\n                }\r\n                value={props.selectedShelf}\r\n            >\r\n                <option value=\"move\" disabled>\r\n                    Move to...\r\n                </option>\r\n                {shelves.map((shelf, idx) => (\r\n                    <option key={idx} value={shelfId[shelf.name]}>\r\n                        {props.selectedShelf === shelfId[shelf.name]\r\n                            ? `✓ ${shelf.name}`\r\n                            : shelf.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookShelfChanger;\r\n","import React, { Component } from \"react\";\r\nimport BookCover from \"./BookCover\";\r\nimport BookShelfChanger from \"./BookShelfChanger\";\r\n\r\nclass Book extends Component {\r\n    render() {\r\n        const {\r\n            bookImage,\r\n            bookShelf,\r\n            bookTitle,\r\n            bookAuthors,\r\n            onUpdate,\r\n        } = this.props;\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <BookCover bookImage={bookImage} />\r\n                    <BookShelfChanger\r\n                        selectedShelf={bookShelf}\r\n                        onChangeShelf={(shelf) => onUpdate(shelf)}\r\n                    />\r\n                </div>\r\n                <div className=\"book-title\">{bookTitle}</div>\r\n                {bookAuthors.map((author, idx) => (\r\n                    <div key={idx} className=\"book-authors\">\r\n                        {author}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from \"./Book\";\r\n\r\nclass SearchPage extends Component {\r\n    state = {\r\n        searchList: [],\r\n    };\r\n    handleChange = (event) => {\r\n        BooksAPI.search(event.target.value)\r\n            .then(async (res) => {\r\n                try {\r\n                    const searchList = res\r\n                        .filter((book) => book.imageLinks)\r\n                        .map((book) => {\r\n                            const existingBook = this.props.getExistingBook(\r\n                                book.id\r\n                            );\r\n                            return {\r\n                                bookId: book.id,\r\n                                url: book.imageLinks.thumbnail,\r\n                                bookShelf: existingBook\r\n                                    ? existingBook.bookShelf\r\n                                    : \"none\",\r\n                                bookTitle: book.title,\r\n                                bookAuthors: book.authors || [],\r\n                            };\r\n                        });\r\n                    this.setState({ searchList });\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.setState({ searchList: [] });\r\n                    return e;\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    handleUpdate = (changedBook, newShelf) => {\r\n        this.props.onChangeShelf(changedBook, newShelf);\r\n        const _changedBook = this.state.searchList.find(\r\n            (book) => book.bookId === changedBook.bookId\r\n        );\r\n        _changedBook.bookShelf = newShelf;\r\n        const searchList = this.state.searchList.map((book) =>\r\n            book.bookTitle === changedBook.title ? _changedBook : book\r\n        );\r\n        this.setState({ searchList });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\" className=\"close-search\">\r\n                        Close\r\n                    </Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                            onChange={this.handleChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.searchList &&\r\n                            this.state.searchList.map((book, idx) => (\r\n                                <li key={idx}>\r\n                                    <Book\r\n                                        bookImage={`url(${book.url})`}\r\n                                        bookTitle={book.bookTitle}\r\n                                        bookAuthors={book.bookAuthors}\r\n                                        bookShelf={book.bookShelf}\r\n                                        onUpdate={(newShelf) =>\r\n                                            this.handleUpdate(book, newShelf)\r\n                                        }\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nconst BookShelf = (props) => {\r\n    const { bookList, bookShelfId,bookShelfTitle, onChangeShelf } = props;\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{bookShelfTitle}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {bookList.map((book, idx) => (\r\n                        <li key={idx}>\r\n                            <Book\r\n                                bookImage={`url(${book.url})`}\r\n                                bookShelf={bookShelfId}\r\n                                bookTitle={book.bookTitle}\r\n                                bookAuthors={book.bookAuthors}\r\n                                onUpdate={(newShelf) =>\r\n                                    onChangeShelf(book, newShelf)\r\n                                }\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookShelf;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        const { bookShelves, onChangeShelf } = this.props;\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                        {bookShelves.map((shelf, idx) => (\r\n                            <BookShelf\r\n                                key={idx}\r\n                                bookShelfId={shelf.id}\r\n                                bookShelfTitle={shelf.bookShelfTitle}\r\n                                bookList={shelf.bookList}\r\n                                onChangeShelf={onChangeShelf}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\">Add a book</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../styles/App.css\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nclass BooksApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.shelvesTemplate = [\r\n            {\r\n                id: \"currentlyReading\",\r\n                bookShelfTitle: \"Currently Reading\",\r\n                bookList: [],\r\n            },\r\n            {\r\n                id: \"wantToRead\",\r\n                bookShelfTitle: \"Want to Read\",\r\n                bookList: [],\r\n            },\r\n            {\r\n                id: \"read\",\r\n                bookShelfTitle: \"Read\",\r\n                bookList: [],\r\n            },\r\n        ];\r\n        this.state = {\r\n            books: [],\r\n            bookShelves: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        BooksAPI.getAll()\r\n            .then((books) => {\r\n                console.log(books);\r\n                books = books.map((book) => ({\r\n                    bookId: book.id,\r\n                    url: book.imageLinks.thumbnail,\r\n                    bookShelf: book.shelf,\r\n                    bookTitle: book.title,\r\n                    bookAuthors: book.authors,\r\n                }));\r\n                const bookShelves = this.putOnShelf(books);\r\n                this.setState({ books, bookShelves });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    putOnShelf = (books) => {\r\n        return this.shelvesTemplate.map((shelf) => ({\r\n            id: shelf.id,\r\n            bookShelfTitle: shelf.bookShelfTitle,\r\n            bookList: books.filter((book) => book.bookShelf === shelf.id),\r\n        }));\r\n    };\r\n    handleChangeShelf = (changedBook, newShelf) => {\r\n        changedBook.bookShelf = newShelf;\r\n        BooksAPI.update({ id: changedBook.bookId }, newShelf)\r\n            .then(() => {\r\n                let books = [...this.state.books];\r\n                const _changedBook = books.find(\r\n                    (book) => book.bookId === changedBook.bookId\r\n                );\r\n                _changedBook\r\n                    ? (books = books.map((book) =>\r\n                          book.bookId === changedBook.bookId\r\n                              ? changedBook\r\n                              : book\r\n                      ))\r\n                    : books.push(changedBook);\r\n\r\n                const bookShelves = this.putOnShelf(books);\r\n                this.setState({ books, bookShelves });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    getExistingBook = (id) =>\r\n        this.state.books.find((book) => book.bookId === id);\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    render={() => (\r\n                        <HomePage\r\n                            bookShelves={this.state.bookShelves}\r\n                            onChangeShelf={this.handleChangeShelf}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path=\"/search\"\r\n                    render={() => (\r\n                        <SearchPage\r\n                            onChangeShelf={this.handleChangeShelf}\r\n                            getExistingBook={this.getExistingBook}\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}